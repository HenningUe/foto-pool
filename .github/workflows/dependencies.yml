name: Dependency Updates

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

jobs:
  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true

    - name: Set up Python 3.12
      run: uv python install 3.12

    - name: Update dependencies
      run: |
        uv sync --upgrade

    - name: Create .env file for testing
      run: |
        cp .env.example .env
        echo "âœ“ Created .env file from .env.example for testing"

    - name: Run tests with updated dependencies
      run: |
        uv run pytest -m "not manual" --tb=short

    - name: Check for changes
      id: changes
      run: |
        if git diff --quiet uv.lock; then
          echo "changes=false" >> $GITHUB_OUTPUT
        else
          echo "changes=true" >> $GITHUB_OUTPUT
        fi

    - name: Create Pull Request
      if: steps.changes.outputs.changes == 'true'
      uses: peter-evans/create-pull-request@v6
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "chore: update dependencies"
        title: "ðŸ”„ Automated dependency updates"
        body: |
          ## ðŸ”„ Automated Dependency Updates
          
          This PR contains automated updates to project dependencies.
          
          ### Changes
          - Updated dependencies in `uv.lock`
          - All tests pass with updated dependencies
          
          ### Review Checklist
          - [ ] Verify all tests pass
          - [ ] Check for any breaking changes in dependencies
          - [ ] Validate build process still works
          
          This PR was automatically created by the dependency update workflow.
        branch: dependency-updates
        delete-branch: true

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true

    - name: Set up Python 3.12
      run: uv python install 3.12

    - name: Install dependencies
      run: uv sync

    - name: Run security audit
      run: |
        # Use pip-audit for security checking
        uv run pip install pip-audit
        uv run pip-audit

    - name: Upload security audit results
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: security-audit-results
        path: audit-results.json
